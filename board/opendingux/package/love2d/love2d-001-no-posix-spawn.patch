diff --git a/src/modules/system/System.cpp b/src/modules/system/System.cpp
index d3175a00..6a5f41cd 100644
--- a/src/modules/system/System.cpp
+++ b/src/modules/system/System.cpp
@@ -39,7 +39,7 @@
 #if defined(LOVE_ANDROID)
 #include "common/android.h"
 #elif defined(LOVE_LINUX)
-#include <spawn.h>
+// #include <spawn.h>
 #endif
 
 namespace love
@@ -70,10 +70,10 @@ std::string System::getOS() const
 #endif
 }
 
-extern "C"
-{
-	extern char **environ; // The environment, always available
-}
+// extern "C"
+// {
+// 	extern char **environ; // The environment, always available
+// }
 
 bool System::openURL(const std::string &url) const
 {
@@ -101,22 +101,23 @@ bool System::openURL(const std::string &url) const
 
 #elif defined(LOVE_LINUX)
 
-	pid_t pid;
-	const char *argv[] = {"xdg-open", url.c_str(), nullptr};
+// 	pid_t pid;
+// 	const char *argv[] = {"xdg-open", url.c_str(), nullptr};
 
 	// Note: at the moment this process inherits our file descriptors.
 	// Note: the below const_cast is really ugly as well.
-	if (posix_spawnp(&pid, "xdg-open", nullptr, nullptr, const_cast<char **>(argv), environ) != 0)
-		return false;
+// 	if (posix_spawnp(&pid, "xdg-open", nullptr, nullptr, const_cast<char **>(argv), environ) != 0)
+// 		return false;
 
 	// Check if xdg-open already completed (or failed.)
-	int status = 0;
-	if (waitpid(pid, &status, WNOHANG) > 0)
-		return (status == 0);
-	else
+// 	int status = 0;
+// 	if (waitpid(pid, &status, WNOHANG) > 0)
+// 		return (status == 0);
+// 	else
 		// We can't tell what actually happens without waiting for
 		// the process to finish, which could take forever (literally).
-		return true;
+// 		return true;
+    return false;
 
 #elif defined(LOVE_WINDOWS)
 
@@ -126,7 +127,7 @@ bool System::openURL(const std::string &url) const
 	HINSTANCE result = 0;
 
 #if defined(LOVE_WINDOWS_UWP)
-	
+
 	Platform::String^ urlString = ref new Platform::String(wurl.c_str());
 	auto uwpUri = ref new Windows::Foundation::Uri(urlString);
 	Windows::System::Launcher::LaunchUriAsync(uwpUri);
